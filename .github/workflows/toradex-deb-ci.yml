# Copyright (c) 2024 Toradex AG
# SPDX-License-Identifier: GPL-3.0-only

name: Toradex Debian CI

on:
  workflow_call:
    inputs:
      apt-opts:
        description: 'Options to be passed to apt-get in the build step'
        required: false
        type: string
      arch:
        default: amd64
        description: 'Architecture to build the package'
        type: string
      buildpackage-opts:
        default: '--build=binary --no-sign'
        description: 'Options to be passed to dpkg-buildpackage'
        required: false
        type: string
      distribution:
        default: 'sid'
        description: 'The Debian distribution to run piuparts in'
        type: string
      docker-image:
        default: debian:unstable
        description: 'Name of a Docker image or path of a Dockerfile to use for the build container'
        required: false
        type: string
      extra-build-deps:
        description: 'Extra packages to be installed as build dependencies'
        required: false
        type: string
      extra-packages:
        description: 'Extra packages to be installed in the build environment'
        required: false
        type: string
      extra-repos:
        description: 'Extra APT repositories to configure in the build environment (one-line-style or deb822-style format)'
        required: false
        type: string
      extra-docker-args:
        description: 'Additional arguments to docker run when starting the build container. By default passes --platform <arch>'
        required: false
        type: string
      extra-repo-keys:
        description: 'Keys for the Extra APT repositories'
        type: string
      extra-apt-preferences:
        description: 'Additional apt preferences file'
        required: false
        type: string
      package-name:
        description: 'Name of the package being built'
        required: true
        type: string
      runner-system:
        description: 'Runner system where the workflow is executed'
        required: false
        type: string
        default: 'ubuntu-latest'
      run-attestation:
        default: false
        description: 'Whether to run attestation to build artifacts or not after the build'
        required: false
        type: boolean
      run-piuparts:
        default: true
        description: 'Whether to run piuparts test or not after the build'
        required: false
        type: boolean
      upload-artifacts:
        default: true
        description: 'Whether to save build artifacts or not'
        required: false
        type: boolean
      before-build-hook:
        description: 'Shell command(s) to be executed after installing the build dependencies and right before dpkg-buildpackage is executed.'
        required: false
        type: string


jobs:
  build-debs:
    runs-on: ${{ inputs.runner-system }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up binfmt with qemu
        uses: docker/setup-qemu-action@v3
        if: ${{ inputs.arch != 'amd64' }} 

      - name: Build Debian Package
        uses: torizon/build-deb-action@master
        with:
          apt-opts: ${{ inputs.apt-opts }}
          buildpackage-opts: ${{ inputs.buildpackage-opts }}
          docker-image: ${{ inputs.docker-image }}
          extra-build-deps: ${{ inputs.extra-build-deps }}
          extra-docker-args: --platform ${{ inputs.arch }} ${{ inputs.extra-docker-args }}
          extra-repo-keys: ${{ inputs.extra-repo-keys }}
          extra-repos: ${{ inputs.extra-repos }}
          extra-apt-preferences: ${{ inputs.extra-apt-preferences }}
          setup-hook: "apt update; apt install -y -q ${{ inputs.extra-packages }}"
          before-build-hook: ${{ inputs.before-build-hook }}

      - name: Attest
        uses: actions/attest-build-provenance@v1
        if: ${{ inputs.run-attestation }}
        with:
          subject-path: 'debian/artifacts*'

      - name: Generating artifact directory name
        run: echo "artifacts=${{ inputs.package-name }}-${{ inputs.arch }}" >> $GITHUB_ENV
        if: ${{ inputs.upload-artifacts }}

      - name: Upload Workflow Artifacts
        uses: actions/upload-artifact@v4
        if: ${{ inputs.upload-artifacts }}
        with:
          name: ${{ env.artifacts }}
          path: debian/artifacts/*
          retention-days: 90

      - name: Run piuparts test
        uses: evgeni/action-piuparts@0da7871135a7c12efdbcae89728c3a314ea8ccf3
        if: ${{ inputs.run-piuparts }}
        with:
          package: debian/artifacts/*.changes
          base-image: ${{ inputs.docker-image }}
          distribution: ${{ inputs.distribution }}
